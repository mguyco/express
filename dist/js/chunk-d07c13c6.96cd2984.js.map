{"version":3,"sources":["webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VCombobox/VCombobox.ts","webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VMenu/VMenu.ts","webpack:///../../../src/mixins/menuable/index.ts","webpack:///../../../src/mixins/selectable/index.ts"],"names":["name","props","delimiters","type","default","returnObject","data","editingIndex","computed","computedCounterValue","this","multiple","selectedItems","internalSearch","hasSlot","isAnyValueAllowed","menuCanShow","hasDisplayedItems","$slots","searchIsDirty","methods","onInternalSearchChanged","val","delimiter","find","d","genInput","input","genChipSelection","chip","dblclick","onChipInput","onEnterDown","e","getMenuIndex","onKeyDown","keyCode","$refs","selectionStart","onTabDown","selectItem","getText","item","toLocaleLowerCase","includes","setSelectedItems","internalValue","setValue","value","updateEditing","index","findIndex","Object","updateCombobox","isUsingSlot","Boolean","$scopedSlots","updateSelf","updateTags","menuIndex","itemToSelect","onPaste","pastedItemText","event","findExistingIndex","clearableCallback","directives","ripple","genRipple","center","$createElement","valueComparator","functional","disabled","indeterminate","indeterminateIcon","onIcon","offIcon","render","children","listeners","icon","h","VIcon","dark","light","staticClass","mergeData","class","on","click","f","mixins","action","dense","hideSelected","items","itemDisabled","String","Array","itemText","itemValue","noDataText","noFilter","searchInput","parsedItems","map","tileActiveClass","setTextColor","staticNoDataTile","tile","attrs","role","undefined","mousedown","VListItem","genTileContent","genAction","VListItemAction","color","genDivider","VDivider","genFilteredText","text","getMaskedCharacters","end","start","genHighlight","middle","genHeader","VSubheader","genTile","hasItem","getDisabled","id","_uid","activeClass","inputValue","length","parent","scopedSlot","needsTile","innerHTML","VList","domProps","indexOf","getValue","slot","itemsLength","tabindex","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","baseMixins","ClickOutside","appendIcon","attach","cacheItems","chips","clearable","deletableChips","disableLookup","eager","itemColor","menuProps","openOnClear","smallChips","cachedItems","menuIsBooted","isMenuActive","lastItem","lazyValue","selectedIndex","keyboardLookupPrefix","keyboardLookupLastTime","allItems","filterDuplicates","concat","classes","computedItems","computedOwns","counterValue","isFocused","handler","closeConditional","include","dynamicHeight","hasChips","isDirty","listData","scopeId","$vnode","context","$vuetify","lang","t","select","scopedSlots","staticList","console","VSelectList","virtualizedItems","$_menuProps","slice","normalisedProps","split","acc","p","nudgeBottom","watch","window","immediate","blur","activateMenu","getContent","contains","$el","uniqueValues","arr","i","menu","isDisabled","isInteractive","VChip","close","small","key","JSON","genCommaSelection","last","genDefaultSlot","selections","prefix","genAffix","suffix","genIcon","VInput","readonly","autocomplete","placeholder","persistentPlaceholder","keypress","onKeyPress","genHiddenInput","attrs$","genInputSlot","genList","genListWithSlot","slots","slotName","genMenu","VMenu","scroll","onScroll","ref","genSelections","genSelection","genSlotSelection","selection","selected","onBlur","$emit","onClick","isAppendInner","onEscDown","KEYBOARD_LOOKUP_THRESHOLD","now","performance","Math","setTimeout","isReadonly","onUpDown","onSpaceDown","onMenuActiveChange","onMouseUp","hasMouseDown","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","setMenuIndex","values","v","appendInner","offsetY","offsetOverflow","transition","allowOverflow","autoSelectFirst","filter","queryText","hideNoData","lazySearch","selectedValues","filteredItems","some","currentRange","selectedItem","get","set","isSearching","document","oldVal","created","destroyed","onFilteredItemsChanged","preSelectedItem","updateMenuDimensions","changeSelectedIndex","deleteCurrentItem","curIndex","curItem","lastIndex","nextIndex","nextItem","onInput","target","setSearch","onCopy","currentItem","currentItemText","active","chipGroup","closeIcon","closeLabel","draggable","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","groupClasses","hasClose","isClickable","breakingProps","original","replacement","genFilter","left","genClose","right","size","genContent","setBackgroundColor","inset","themeClasses","$listeners","Resize","provide","isInMenu","theme","auto","Number","offsetX","openOnHover","origin","calculatedTopAuto","defaultOffset","hasJustFocused","listIndex","resizeTimeout","tiles","calculatedLeft","menuWidth","dimensions","content","parseFloat","calcXOverflow","calcLeft","calculatedMaxHeight","height","calculatedMaxWidth","calculatedMinWidth","minWidth","activator","width","pageWidth","isNaN","parseInt","calculatedTop","top","calcYOverflow","hasClickableTiles","styles","maxWidth","transformOrigin","zIndex","activeZIndex","isActive","isContentActive","next","contentHeight","appOffset","duration","container","prev","classList","remove","$attrs","hasOwnProperty","mounted","activate","calcScrollPosition","maxScrollTop","calcLeftAuto","calcTopAuto","tileDistanceFromMenuTop","firstTileOffsetTop","computedTop","changeListIndex","genActivatorAttributes","attributes","genActivatorListeners","genTransition","genDirectives","options","menuable__content__active","contentClass","style","keydown","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","lastTile","firstTile","onResize","clearTimeout","arg","showLazyContent","root","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","positionX","positionY","activatorNode","absoluteX","absoluteY","activatedBy","activatorFixed","bottom","offsetTop","offsetLeft","relativeYOffset","hasWindow","inputActivator","pageYOffset","stackClass","stackMinZIndex","computedLeft","a","c","activatorLeft","hasActivator","absoluteYOffset","beforeMount","beforeDestroy","absolutePosition","calcTop","xOverflow","documentHeight","toTop","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","el","deactivate","getInnerHeight","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","sneakPeek","cb","startTransition","Promise","resolve","updateDimensions","offsetRect","model","prop","falseValue","trueValue","hasColor","computedColor","isDark","isMultiple","rippleState","genLabel","prevent","checked","change","focus","onChange","onFocus","onKeydown"],"mappings":"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","file":"js/chunk-d07c13c6.96cd2984.js","sourcesContent":["import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n\n        // if selected item contains search value,\n        // remove the search string\n        if (\n          this.internalSearch &&\n          this.multiple &&\n          this.getText(item).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())\n        ) {\n          this.internalSearch = null\n        }\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value ?? this.internalSearch)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      const index = this.selectedItems.findIndex(item =>\n        this.getText(item) === this.internalSearch)\n\n      // If user enters a duplicate text on chip edit,\n      // don't add it, move it to the end of the list\n      if (index > -1) {\n        const item = typeof value[index] === 'object'\n          ? Object.assign({}, value[index])\n          : value[index]\n\n        value.splice(index, 1)\n        value.push(item)\n      } else {\n        value[this.editingIndex] = this.internalSearch\n      }\n\n      this.setValue(value)\n      this.editingIndex = -1\n      this.internalSearch = null\n    },\n    updateCombobox () {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot to avoid a double input\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n      if (isUsingSlot) this.internalSearch = null\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // or if the search is empty\n      // do nothing\n      if ((menuIndex < 0 && !this.searchIsDirty) ||\n          !this.internalSearch) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.findIndex(item =>\n        this.internalSearch === this.getText(item))\n\n      // If the duplicate item is an object,\n      // copy it, so that it can be added again later\n      const itemToSelect = index > -1 && typeof this.selectedItems[index] === 'object'\n        ? Object.assign({}, this.selectedItems[index])\n        : this.internalSearch\n\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(itemToSelect)\n\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData?.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n    clearableCallback () {\n      this.editingIndex = -1\n\n      VAutocomplete.options.methods.clearableCallback.call(this)\n    },\n  },\n})\n","import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: {\n          'v-simple-checkbox': true,\n          'v-simple-checkbox--disabled': props.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), [\n        h('div', { staticClass: 'v-input--selection-controls__input' }, children),\n      ])\n  },\n})\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n            ripple: false,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: text, middle: '', end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Dependent from '../../mixins/dependent'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Dependent,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    content: HTMLElement\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      const value = this.multiple\n        ? this.selectedItems\n        : (this.getText(this.selectedItems[0]) || '').toString()\n\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(value)\n      }\n\n      return value.length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: {\n          handler: this.blur,\n          closeConditional: this.closeConditional,\n          include: () => this.getOpenDependentElements(),\n        },\n      }] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n      this.setMenuIndex(-1)\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        !this.isInteractive ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : null)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n\n        // Do not deduplicate headers or dividers (#12517)\n        if (item.header || item.divider) {\n          uniqueValues.set(item, item)\n          continue\n        }\n\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n      const isInteractive = !isDisabled && this.isInteractive\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && isInteractive,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (!isInteractive) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.isReadonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n          placeholder: (!this.isDirty && (this.persistentPlaceholder || this.isFocused || !this.hasLabel)) ? this.placeholder : undefined,\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n          scroll: this.onScroll,\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: !this.isInteractive,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        !this.isInteractive ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.isReadonly && e.keyCode !== keyCodes.tab) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && [keyCodes.up, keyCodes.down, keyCodes.home, keyCodes.end, keyCodes.enter].includes(keyCode)) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      // If menu is not active, up/down/home/end can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down, keyCodes.home, keyCodes.end].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      this.$refs.menu.getTiles()\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      // eslint-disable-next-line sonarjs/no-collapsible-if\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        this.isInteractive\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem > this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n\n        if (!menu.hasClickableTiles) return this.activateMenu()\n\n        switch (keyCode) {\n          case keyCodes.up:\n            menu.prevTile()\n            break\n          case keyCodes.down:\n            menu.nextTile()\n            break\n          case keyCodes.home:\n            menu.firstTile()\n            break\n          case keyCodes.end:\n            menu.lastTile()\n            break\n        }\n        this.selectItem(this.allItems[this.getMenuIndex()])\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) {\n          this.setMenuIndex(-1)\n        } else {\n          const index = this.allItems.indexOf(item)\n          if (~index) {\n            this.$nextTick(() => this.$refs.menu.getTiles())\n            setTimeout(() => this.setMenuIndex(index))\n          }\n        }\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      if (!this.valueComparator(value, this.internalValue)) {\n        this.internalValue = value\n        this.$emit('change', value)\n      }\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      if (!this.autoSelectFirst) {\n        const preSelectedItem = oldVal[this.$refs.menu.listIndex]\n\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(i => i === preSelectedItem))\n        } else {\n          this.setMenuIndex(-1)\n        }\n        this.$emit('update:list-index', this.$refs.menu.listIndex)\n      }\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n\n        if (this.autoSelectFirst && val.length) {\n          this.setMenuIndex(0)\n          this.$emit('update:list-index', this.$refs.menu.listIndex)\n        }\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Roundable from '../../mixins/roundable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\nimport goTo from '../../services/goto'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Menuable,\n  Returnable,\n  Roundable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        const scrollTop = this.$refs.content.scrollTop\n        const contentHeight = this.$refs.content.clientHeight\n\n        if (scrollTop > tile.offsetTop - 8) {\n          goTo(tile.offsetTop - tile.clientHeight, {\n            appOffset: false,\n            duration: 300,\n            container: this.$refs.content,\n          })\n        } else if (scrollTop + contentHeight < tile.offsetTop + tile.clientHeight + 8) {\n          goTo(tile.offsetTop - contentHeight + tile.clientHeight * 2, {\n            appOffset: false,\n            duration: 300,\n            container: this.$refs.content,\n          })\n        }\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.end) {\n        this.lastTile()\n      } else if (e.keyCode === keyCodes.home) {\n        this.firstTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: {\n            handler: () => { this.isActive = false },\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        })\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          ...this.roundedClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (this.$listeners.scroll) {\n        options.on = options.on || {}\n        options.on.scroll = this.$listeners.scroll\n      }\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    lastTile () {\n      const tile = this.tiles[this.tiles.length - 1]\n\n      if (!tile) return\n\n      this.listIndex = this.tiles.length - 1\n\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    firstTile () {\n      const tile = this.tiles[0]\n\n      if (!tile) return\n\n      this.listIndex = 0\n\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n","// Mixins\nimport Stackable from '../stackable'\nimport { factory as positionableFactory } from '../positionable'\nimport Activatable from '../activatable'\nimport Detachable from '../detachable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Stackable,\n  positionableFactory(['top', 'right', 'bottom', 'left', 'absolute']),\n  Activatable,\n  Detachable,\n)\n\ninterface dimensions {\n  top: number\n  left: number\n  bottom: number\n  right: number\n  width: number\n  height: number\n  offsetTop: number\n  scrollHeight: number\n  offsetLeft: number\n}\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  dimensions: {\n    activator: dimensions\n    content: dimensions\n  }\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    activatorNode: [] as VNode[],\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    relativeYOffset: 0,\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n    absoluteYOffset (): number {\n      return this.pageYOffset - this.relativeYOffset\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n\n    if (this.hasWindow) {\n      window.addEventListener('resize', this.updateDimensions, false)\n    }\n  },\n\n  beforeDestroy () {\n    if (this.hasWindow) {\n      window.removeEventListener('resize', this.updateDimensions, false)\n    }\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: this.positionY || this.absoluteY,\n        offsetLeft: this.positionX || this.absoluteX,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.absoluteYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.absoluteYOffset && !this.allowOverflow) {\n        top = this.absoluteYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent & FocusEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        if (this.$refs.content) {\n          if (this.$refs.content.offsetParent) {\n            const offsetRect = this.getRoundedBoundedClientRect(this.$refs.content.offsetParent)\n\n            this.relativeYOffset = window.pageYOffset + offsetRect.top\n            dimensions.activator.top -= this.relativeYOffset\n            dimensions.activator.left -= window.pageXOffset + offsetRect.left\n          }\n\n          dimensions.content = this.measure(this.$refs.content)\n        }\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\nexport function prevent (e: Event) {\n  e.preventDefault()\n}\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.isDisabled && !this.validationState\n        ? undefined\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        // Label shouldn't cause the input to focus\n        click: prevent,\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n          click: prevent,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onClick (e: Event) {\n      this.onChange()\n      this.$emit('click', e)\n    },\n    onChange () {\n      if (!this.isInteractive) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n"],"sourceRoot":""}